package com.example.demo.controllers;

import java.sql.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.demo.model.Genero;
import com.example.demo.model.Pelicula;
import com.example.demo.service.GeneroService;
import com.example.demo.service.PeliculaService;

@Controller
@RequestMapping("/peliculas")
public class PeliculaController {

	@Autowired
	private PeliculaService peliculaService;

	@Autowired
	private GeneroService generoService;

	@GetMapping("/getAllPeliculas")
	public String getAllPeliculas(Model model) {

		List<Pelicula> listPelicula = peliculaService.getAllPeliculas();
		List<Genero> listGenero = generoService.getAllGeneros();

		model.addAttribute("peliculas", listPelicula);
		model.addAttribute("generos", listGenero);
		return "peliculaList";
	}

	@GetMapping("/register")
	public String register() {
		return "peliculaRegister";
	}

	@PostMapping("/register")
	public String createPelicula(@RequestParam("nombre") String nombre, @RequestParam("director") String director,
			@RequestParam("fechaEstreno") Date fechaEstreno, @RequestParam("generoId") Long generoId, Model model) {

		Pelicula pelicula = new Pelicula();
		pelicula.nombre = nombre;
		pelicula.director = director;
		pelicula.fechaEstreno = fechaEstreno;

		Genero genero = generoService.getGeneroById(generoId);
		pelicula.genero = genero;

		peliculaService.createPelicula(pelicula);

		List<Pelicula> listPelicula = peliculaService.getAllPeliculas();
		model.addAttribute("peliculas", listPelicula);

		return "peliculas";
	}

	@GetMapping("/edit/{id}")
	public String getPeliculaByID(@PathVariable Long id, Model model) {
		Pelicula pelicula = peliculaService.getPeliculaById(id);
		List<Genero> listGenero = generoService.getAllGeneros();

		model.addAttribute("pelicula", pelicula);
		model.addAttribute("generos", listGenero);
		return "peliculaEdit";
	}

	@PostMapping("/edit")
	public String editPelicula(@RequestParam("id") Long id, @RequestParam("nombre") String nombre,
			@RequestParam("director") String director, @RequestParam("fechaEstreno") Date fechaEstreno,
			@RequestParam("generoId") Long generoId, Model model) {

		Pelicula pelicula = peliculaService.getPeliculaById(id);
		pelicula.nombre = nombre;
		pelicula.director = director;
		pelicula.fechaEstreno = fechaEstreno;

		Genero genero = generoService.getGeneroById(generoId);
		pelicula.genero = genero;

		peliculaService.createPelicula(pelicula);

		List<Pelicula> listPelicula = peliculaService.getAllPeliculas();
		model.addAttribute("peliculas", listPelicula);

		return "peliculasList";
	}

	@GetMapping("/delete/{id}")
	public String deletePelicula(@PathVariable Long id, Model model) {
		peliculaService.deletePelicula(id);

		List<Pelicula> listPelicula = peliculaService.getAllPeliculas();
		model.addAttribute("peliculas", listPelicula);

		return "peliculasList";
	}

}
